{"ast":null,"code":"import _classCallCheck from \"D:\\\\\\u0421afeteria\\\\ClientApp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\\\u0421afeteria\\\\ClientApp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"D:\\\\\\u0421afeteria\\\\ClientApp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"D:\\\\\\u0421afeteria\\\\ClientApp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"D:\\\\\\u0421afeteria\\\\ClientApp\\\\src\\\\components\\\\FetchData.tsx\";\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport * as WeatherForecastsStore from '../store/WeatherForecasts'; // At runtime, Redux will merge together...\n\n// ... plus incoming routing parameters\nvar FetchData = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(FetchData, _React$PureComponent);\n\n  var _super = _createSuper(FetchData);\n\n  function FetchData() {\n    _classCallCheck(this, FetchData);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(FetchData, [{\n    key: \"componentDidMount\",\n    // This method is called when the component is first added to the document\n    value: function componentDidMount() {\n      this.ensureDataFetched();\n    } // This method is called when the route parameters change\n\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.ensureDataFetched();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        id: \"tabelLabel\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }\n      }, \"Weather forecast\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }\n      }, \"This component demonstrates fetching data from the server and working with URL parameters.\"), this.renderForecastsTable(), this.renderPagination());\n    }\n  }, {\n    key: \"ensureDataFetched\",\n    value: function ensureDataFetched() {\n      var startDateIndex = parseInt(this.props.match.params.startDateIndex, 10) || 0;\n      this.props.requestWeatherForecasts(startDateIndex);\n    }\n  }, {\n    key: \"renderForecastsTable\",\n    value: function renderForecastsTable() {\n      var _this = this;\n\n      return /*#__PURE__*/React.createElement(\"table\", {\n        className: \"table table-striped\",\n        \"aria-labelledby\": \"tabelLabel\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }\n      }, \"Date\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }\n      }, \"Temp. (C)\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }\n      }, \"Temp. (F)\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }\n      }, \"Summary\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }\n      }, this.props.forecasts.map(function (forecast) {\n        return /*#__PURE__*/React.createElement(\"tr\", {\n          key: forecast.date,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }\n        }, forecast.date), /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }\n        }, forecast.temperatureC), /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }\n        }, forecast.temperatureF), /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }\n        }, forecast.summary));\n      })));\n    }\n  }, {\n    key: \"renderPagination\",\n    value: function renderPagination() {\n      var prevStartDateIndex = (this.props.startDateIndex || 0) - 5;\n      var nextStartDateIndex = (this.props.startDateIndex || 0) + 5;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-between\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        className: \"btn btn-outline-secondary btn-sm\",\n        to: \"/fetch-data/\".concat(prevStartDateIndex),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }\n      }, \"Previous\"), this.props.isLoading && /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 34\n        }\n      }, \"Loading...\"), /*#__PURE__*/React.createElement(Link, {\n        className: \"btn btn-outline-secondary btn-sm\",\n        to: \"/fetch-data/\".concat(nextStartDateIndex),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }\n      }, \"Next\"));\n    }\n  }]);\n\n  return FetchData;\n}(React.PureComponent);\n\nexport default connect(function (state) {\n  return state.weatherForecasts;\n}, // Selects which state properties are merged into the component's props\nWeatherForecastsStore.actionCreators // Selects which action creators are merged into the component's props\n)(FetchData);","map":{"version":3,"sources":["D:/Ð¡afeteria/ClientApp/src/components/FetchData.tsx"],"names":["React","connect","Link","WeatherForecastsStore","FetchData","ensureDataFetched","renderForecastsTable","renderPagination","startDateIndex","parseInt","props","match","params","requestWeatherForecasts","forecasts","map","forecast","date","temperatureC","temperatureF","summary","prevStartDateIndex","nextStartDateIndex","isLoading","PureComponent","state","weatherForecasts","actionCreators"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport { ApplicationState } from '../store';\r\nimport * as WeatherForecastsStore from '../store/WeatherForecasts';\r\n\r\n// At runtime, Redux will merge together...\r\ntype WeatherForecastProps =\r\n  WeatherForecastsStore.WeatherForecastsState // ... state we've requested from the Redux store\r\n  & typeof WeatherForecastsStore.actionCreators // ... plus action creators we've requested\r\n  & RouteComponentProps<{ startDateIndex: string }>; // ... plus incoming routing parameters\r\n\r\n\r\nclass FetchData extends React.PureComponent<WeatherForecastProps> {\r\n  // This method is called when the component is first added to the document\r\n  public componentDidMount() {\r\n    this.ensureDataFetched();\r\n  }\r\n\r\n  // This method is called when the route parameters change\r\n  public componentDidUpdate() {\r\n    this.ensureDataFetched();\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <React.Fragment>\r\n        <h1 id=\"tabelLabel\">Weather forecast</h1>\r\n        <p>This component demonstrates fetching data from the server and working with URL parameters.</p>\r\n        {this.renderForecastsTable()}\r\n        {this.renderPagination()}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  private ensureDataFetched() {\r\n    const startDateIndex = parseInt(this.props.match.params.startDateIndex, 10) || 0;\r\n    this.props.requestWeatherForecasts(startDateIndex);\r\n  }\r\n\r\n  private renderForecastsTable() {\r\n    return (\r\n      <table className='table table-striped' aria-labelledby=\"tabelLabel\">\r\n        <thead>\r\n          <tr>\r\n            <th>Date</th>\r\n            <th>Temp. (C)</th>\r\n            <th>Temp. (F)</th>\r\n            <th>Summary</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {this.props.forecasts.map((forecast: WeatherForecastsStore.WeatherForecast) =>\r\n            <tr key={forecast.date}>\r\n              <td>{forecast.date}</td>\r\n              <td>{forecast.temperatureC}</td>\r\n              <td>{forecast.temperatureF}</td>\r\n              <td>{forecast.summary}</td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }\r\n\r\n  private renderPagination() {\r\n    const prevStartDateIndex = (this.props.startDateIndex || 0) - 5;\r\n    const nextStartDateIndex = (this.props.startDateIndex || 0) + 5;\r\n\r\n    return (\r\n      <div className=\"d-flex justify-content-between\">\r\n        <Link className='btn btn-outline-secondary btn-sm' to={`/fetch-data/${prevStartDateIndex}`}>Previous</Link>\r\n        {this.props.isLoading && <span>Loading...</span>}\r\n        <Link className='btn btn-outline-secondary btn-sm' to={`/fetch-data/${nextStartDateIndex}`}>Next</Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  (state: ApplicationState) => state.weatherForecasts, // Selects which state properties are merged into the component's props\r\n  WeatherForecastsStore.actionCreators // Selects which action creators are merged into the component's props\r\n)(FetchData as any);\r\n"]},"metadata":{},"sourceType":"module"}