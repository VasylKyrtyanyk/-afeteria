// <auto-generated />
using System;
using Cafeteria.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Cafeteria.DAL.Migrations
{
    [DbContext(typeof(CafeteriaDbContext))]
    partial class CafeteriaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Сafeteria.DataModels.Entities.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("MenuDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Menus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MenuDate = new DateTime(2020, 10, 7, 14, 23, 21, 422, DateTimeKind.Local).AddTicks(1305)
                        },
                        new
                        {
                            Id = 2,
                            MenuDate = new DateTime(2020, 10, 8, 14, 23, 21, 422, DateTimeKind.Local).AddTicks(2334)
                        });
                });

            modelBuilder.Entity("Сafeteria.DataModels.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CompletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsTakeAway")
                        .HasColumnType("bit");

                    b.Property<int>("OrderStatus")
                        .HasColumnType("int");

                    b.Property<int>("PaymentType")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalSum")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2020, 10, 6, 14, 23, 21, 428, DateTimeKind.Local).AddTicks(6121),
                            IsTakeAway = false,
                            OrderStatus = 0,
                            PaymentType = 0,
                            TotalSum = 105.5m,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2020, 10, 6, 14, 23, 21, 428, DateTimeKind.Local).AddTicks(9993),
                            IsTakeAway = true,
                            OrderStatus = 0,
                            PaymentType = 2,
                            TotalSum = 155.5m,
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2020, 10, 6, 14, 23, 21, 429, DateTimeKind.Local).AddTicks(119),
                            IsTakeAway = true,
                            OrderStatus = 0,
                            PaymentType = 1,
                            TotalSum = 155.5m,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("Сafeteria.DataModels.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FinalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductCategory")
                        .HasColumnType("int");

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "bla bla bla",
                            FinalDate = new DateTime(2020, 10, 8, 14, 23, 21, 416, DateTimeKind.Local).AddTicks(2968),
                            Name = "Borscht",
                            Price = 30.0m,
                            ProductCategory = 3,
                            Weight = 300.0
                        },
                        new
                        {
                            Id = 2,
                            Description = "bla bla bla",
                            FinalDate = new DateTime(2020, 10, 11, 14, 23, 21, 421, DateTimeKind.Local).AddTicks(9178),
                            Name = "Varenyky",
                            Price = 25.0m,
                            ProductCategory = 3,
                            Weight = 200.0
                        });
                });

            modelBuilder.Entity("Сafeteria.DataModels.Entities.ProductMenu", b =>
                {
                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("MenuId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductMenu");

                    b.HasData(
                        new
                        {
                            MenuId = 1,
                            ProductId = 1
                        },
                        new
                        {
                            MenuId = 1,
                            ProductId = 2
                        },
                        new
                        {
                            MenuId = 2,
                            ProductId = 1
                        },
                        new
                        {
                            MenuId = 2,
                            ProductId = 2
                        });
                });

            modelBuilder.Entity("Сafeteria.DataModels.Entities.ProductOrder", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("OrderId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductOrder");

                    b.HasData(
                        new
                        {
                            OrderId = 1,
                            ProductId = 1
                        },
                        new
                        {
                            OrderId = 1,
                            ProductId = 2
                        },
                        new
                        {
                            OrderId = 2,
                            ProductId = 1
                        });
                });

            modelBuilder.Entity("Сafeteria.DataModels.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "Andrii.virt@lnu.edu.ua",
                            Password = "pass1234",
                            UserType = 0
                        },
                        new
                        {
                            Id = 2,
                            Email = "Vasyl.Samuliak@lnu.edu.ua",
                            Password = "5678word2",
                            UserType = 0
                        });
                });

            modelBuilder.Entity("Сafeteria.DataModels.Entities.UserProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("UserProfiles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Balance = 1110.0m,
                            DateOfBirth = new DateTime(1999, 11, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Andrii",
                            LastName = "Virt",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Balance = 1110.0m,
                            DateOfBirth = new DateTime(1998, 3, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Vasyl",
                            LastName = "Samuliak",
                            UserId = 2
                        });
                });

            modelBuilder.Entity("Сafeteria.DataModels.Entities.Order", b =>
                {
                    b.HasOne("Сafeteria.DataModels.Entities.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Сafeteria.DataModels.Entities.ProductMenu", b =>
                {
                    b.HasOne("Сafeteria.DataModels.Entities.Menu", "Menu")
                        .WithMany("ProductMenus")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Сafeteria.DataModels.Entities.Product", "Product")
                        .WithMany("ProductMenus")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Сafeteria.DataModels.Entities.ProductOrder", b =>
                {
                    b.HasOne("Сafeteria.DataModels.Entities.Order", "Order")
                        .WithMany("ProductOrders")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Сafeteria.DataModels.Entities.Product", "Product")
                        .WithMany("ProductOrders")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Сafeteria.DataModels.Entities.UserProfile", b =>
                {
                    b.HasOne("Сafeteria.DataModels.Entities.User", "User")
                        .WithOne("Profile")
                        .HasForeignKey("Сafeteria.DataModels.Entities.UserProfile", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
